//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReaderDataCollector.AtwService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Read", Namespace="http://schemas.datacontract.org/2004/07/ATWService.Model")]
    [System.SerializableAttribute()]
    public partial class Read : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EPCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReaderDataCollector.AtwService.Reading ReadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ReadingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EPC {
            get {
                return this.EPCField;
            }
            set {
                if ((object.ReferenceEquals(this.EPCField, value) != true)) {
                    this.EPCField = value;
                    this.RaisePropertyChanged("EPC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReaderDataCollector.AtwService.Reading Reading {
            get {
                return this.ReadingField;
            }
            set {
                if ((object.ReferenceEquals(this.ReadingField, value) != true)) {
                    this.ReadingField = value;
                    this.RaisePropertyChanged("Reading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ReadingId {
            get {
                return this.ReadingIdField;
            }
            set {
                if ((this.ReadingIdField.Equals(value) != true)) {
                    this.ReadingIdField = value;
                    this.RaisePropertyChanged("ReadingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Signal {
            get {
                return this.SignalField;
            }
            set {
                if ((object.ReferenceEquals(this.SignalField, value) != true)) {
                    this.SignalField = value;
                    this.RaisePropertyChanged("Signal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reading", Namespace="http://schemas.datacontract.org/2004/07/ATWService.Model")]
    [System.SerializableAttribute()]
    public partial class Reading : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AntennaNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReaderDataCollector.AtwService.Reader ReaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReaderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReaderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReaderDataCollector.AtwService.Read[] ReadsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimingPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalReadsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AntennaNumber {
            get {
                return this.AntennaNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AntennaNumberField, value) != true)) {
                    this.AntennaNumberField = value;
                    this.RaisePropertyChanged("AntennaNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndedDateTime {
            get {
                return this.EndedDateTimeField;
            }
            set {
                if ((this.EndedDateTimeField.Equals(value) != true)) {
                    this.EndedDateTimeField = value;
                    this.RaisePropertyChanged("EndedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReaderDataCollector.AtwService.Reader Reader {
            get {
                return this.ReaderField;
            }
            set {
                if ((object.ReferenceEquals(this.ReaderField, value) != true)) {
                    this.ReaderField = value;
                    this.RaisePropertyChanged("Reader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReaderId {
            get {
                return this.ReaderIdField;
            }
            set {
                if ((this.ReaderIdField.Equals(value) != true)) {
                    this.ReaderIdField = value;
                    this.RaisePropertyChanged("ReaderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReaderNumber {
            get {
                return this.ReaderNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReaderNumberField, value) != true)) {
                    this.ReaderNumberField = value;
                    this.RaisePropertyChanged("ReaderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReaderDataCollector.AtwService.Read[] Reads {
            get {
                return this.ReadsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReadsField, value) != true)) {
                    this.ReadsField = value;
                    this.RaisePropertyChanged("Reads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartedDateTime {
            get {
                return this.StartedDateTimeField;
            }
            set {
                if ((this.StartedDateTimeField.Equals(value) != true)) {
                    this.StartedDateTimeField = value;
                    this.RaisePropertyChanged("StartedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimingPoint {
            get {
                return this.TimingPointField;
            }
            set {
                if ((object.ReferenceEquals(this.TimingPointField, value) != true)) {
                    this.TimingPointField = value;
                    this.RaisePropertyChanged("TimingPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalReads {
            get {
                return this.TotalReadsField;
            }
            set {
                if ((this.TotalReadsField.Equals(value) != true)) {
                    this.TotalReadsField = value;
                    this.RaisePropertyChanged("TotalReads");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reader", Namespace="http://schemas.datacontract.org/2004/07/ATWService.Model")]
    [System.SerializableAttribute()]
    public partial class Reader : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReaderDataCollector.AtwService.Reading[] ReadingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Host {
            get {
                return this.HostField;
            }
            set {
                if ((object.ReferenceEquals(this.HostField, value) != true)) {
                    this.HostField = value;
                    this.RaisePropertyChanged("Host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Port {
            get {
                return this.PortField;
            }
            set {
                if ((object.ReferenceEquals(this.PortField, value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReaderDataCollector.AtwService.Reading[] Readings {
            get {
                return this.ReadingsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReadingsField, value) != true)) {
                    this.ReadingsField = value;
                    this.RaisePropertyChanged("Readings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Race", Namespace="http://schemas.datacontract.org/2004/07/ATWService.Model")]
    [System.SerializableAttribute()]
    public partial class Race : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReaderDataCollector.AtwService.Reader ReaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReaderDataCollector.AtwService.Reading ReadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReaderDataCollector.AtwService.Read[] ReadsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReaderDataCollector.AtwService.Reader Reader {
            get {
                return this.ReaderField;
            }
            set {
                if ((object.ReferenceEquals(this.ReaderField, value) != true)) {
                    this.ReaderField = value;
                    this.RaisePropertyChanged("Reader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReaderDataCollector.AtwService.Reading Reading {
            get {
                return this.ReadingField;
            }
            set {
                if ((object.ReferenceEquals(this.ReadingField, value) != true)) {
                    this.ReadingField = value;
                    this.RaisePropertyChanged("Reading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReaderDataCollector.AtwService.Read[] Reads {
            get {
                return this.ReadsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReadsField, value) != true)) {
                    this.ReadsField = value;
                    this.RaisePropertyChanged("Reads");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AtwService.IReadingService")]
    public interface IReadingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/SetRead", ReplyAction="http://tempuri.org/IReadingService/SetReadResponse")]
        ReaderDataCollector.AtwService.Read SetRead(ReaderDataCollector.AtwService.Read read);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/SetRead", ReplyAction="http://tempuri.org/IReadingService/SetReadResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Read> SetReadAsync(ReaderDataCollector.AtwService.Read read);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/SetReading", ReplyAction="http://tempuri.org/IReadingService/SetReadingResponse")]
        ReaderDataCollector.AtwService.Reading SetReading(ReaderDataCollector.AtwService.Reading reading);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/SetReading", ReplyAction="http://tempuri.org/IReadingService/SetReadingResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Reading> SetReadingAsync(ReaderDataCollector.AtwService.Reading reading);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/SetReader", ReplyAction="http://tempuri.org/IReadingService/SetReaderResponse")]
        ReaderDataCollector.AtwService.Reader SetReader(ReaderDataCollector.AtwService.Reader reader);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/SetReader", ReplyAction="http://tempuri.org/IReadingService/SetReaderResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Reader> SetReaderAsync(ReaderDataCollector.AtwService.Reader reader);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetReadingById", ReplyAction="http://tempuri.org/IReadingService/GetReadingByIdResponse")]
        ReaderDataCollector.AtwService.Reading GetReadingById(System.Guid readingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetReadingById", ReplyAction="http://tempuri.org/IReadingService/GetReadingByIdResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Reading> GetReadingByIdAsync(System.Guid readingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetAllReadings", ReplyAction="http://tempuri.org/IReadingService/GetAllReadingsResponse")]
        ReaderDataCollector.AtwService.Reading[] GetAllReadings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetAllReadings", ReplyAction="http://tempuri.org/IReadingService/GetAllReadingsResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Reading[]> GetAllReadingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetAllRaces", ReplyAction="http://tempuri.org/IReadingService/GetAllRacesResponse")]
        ReaderDataCollector.AtwService.Race[] GetAllRaces();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetAllRaces", ReplyAction="http://tempuri.org/IReadingService/GetAllRacesResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Race[]> GetAllRacesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetRaceByReadingId", ReplyAction="http://tempuri.org/IReadingService/GetRaceByReadingIdResponse")]
        ReaderDataCollector.AtwService.Race GetRaceByReadingId(System.Guid readingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetRaceByReadingId", ReplyAction="http://tempuri.org/IReadingService/GetRaceByReadingIdResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Race> GetRaceByReadingIdAsync(System.Guid readingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetReadById", ReplyAction="http://tempuri.org/IReadingService/GetReadByIdResponse")]
        ReaderDataCollector.AtwService.Read GetReadById(System.Guid readId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetReadById", ReplyAction="http://tempuri.org/IReadingService/GetReadByIdResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Read> GetReadByIdAsync(System.Guid readId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetAllReads", ReplyAction="http://tempuri.org/IReadingService/GetAllReadsResponse")]
        ReaderDataCollector.AtwService.Read[] GetAllReads();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetAllReads", ReplyAction="http://tempuri.org/IReadingService/GetAllReadsResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Read[]> GetAllReadsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetReaderById", ReplyAction="http://tempuri.org/IReadingService/GetReaderByIdResponse")]
        ReaderDataCollector.AtwService.Reader GetReaderById(int readerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetReaderById", ReplyAction="http://tempuri.org/IReadingService/GetReaderByIdResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Reader> GetReaderByIdAsync(int readerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetAllReaders", ReplyAction="http://tempuri.org/IReadingService/GetAllReadersResponse")]
        ReaderDataCollector.AtwService.Reader[] GetAllReaders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetAllReaders", ReplyAction="http://tempuri.org/IReadingService/GetAllReadersResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Reader[]> GetAllReadersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetAllReadsByReadingId", ReplyAction="http://tempuri.org/IReadingService/GetAllReadsByReadingIdResponse")]
        ReaderDataCollector.AtwService.Read[] GetAllReadsByReadingId(System.Guid readingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetAllReadsByReadingId", ReplyAction="http://tempuri.org/IReadingService/GetAllReadsByReadingIdResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Read[]> GetAllReadsByReadingIdAsync(System.Guid readingId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReadingServiceChannel : ReaderDataCollector.AtwService.IReadingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReadingServiceClient : System.ServiceModel.ClientBase<ReaderDataCollector.AtwService.IReadingService>, ReaderDataCollector.AtwService.IReadingService {
        
        public ReadingServiceClient() {
        }
        
        public ReadingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReadingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReadingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReadingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReaderDataCollector.AtwService.Read SetRead(ReaderDataCollector.AtwService.Read read) {
            return base.Channel.SetRead(read);
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Read> SetReadAsync(ReaderDataCollector.AtwService.Read read) {
            return base.Channel.SetReadAsync(read);
        }
        
        public ReaderDataCollector.AtwService.Reading SetReading(ReaderDataCollector.AtwService.Reading reading) {
            return base.Channel.SetReading(reading);
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Reading> SetReadingAsync(ReaderDataCollector.AtwService.Reading reading) {
            return base.Channel.SetReadingAsync(reading);
        }
        
        public ReaderDataCollector.AtwService.Reader SetReader(ReaderDataCollector.AtwService.Reader reader) {
            return base.Channel.SetReader(reader);
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Reader> SetReaderAsync(ReaderDataCollector.AtwService.Reader reader) {
            return base.Channel.SetReaderAsync(reader);
        }
        
        public ReaderDataCollector.AtwService.Reading GetReadingById(System.Guid readingId) {
            return base.Channel.GetReadingById(readingId);
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Reading> GetReadingByIdAsync(System.Guid readingId) {
            return base.Channel.GetReadingByIdAsync(readingId);
        }
        
        public ReaderDataCollector.AtwService.Reading[] GetAllReadings() {
            return base.Channel.GetAllReadings();
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Reading[]> GetAllReadingsAsync() {
            return base.Channel.GetAllReadingsAsync();
        }
        
        public ReaderDataCollector.AtwService.Race[] GetAllRaces() {
            return base.Channel.GetAllRaces();
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Race[]> GetAllRacesAsync() {
            return base.Channel.GetAllRacesAsync();
        }
        
        public ReaderDataCollector.AtwService.Race GetRaceByReadingId(System.Guid readingId) {
            return base.Channel.GetRaceByReadingId(readingId);
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Race> GetRaceByReadingIdAsync(System.Guid readingId) {
            return base.Channel.GetRaceByReadingIdAsync(readingId);
        }
        
        public ReaderDataCollector.AtwService.Read GetReadById(System.Guid readId) {
            return base.Channel.GetReadById(readId);
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Read> GetReadByIdAsync(System.Guid readId) {
            return base.Channel.GetReadByIdAsync(readId);
        }
        
        public ReaderDataCollector.AtwService.Read[] GetAllReads() {
            return base.Channel.GetAllReads();
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Read[]> GetAllReadsAsync() {
            return base.Channel.GetAllReadsAsync();
        }
        
        public ReaderDataCollector.AtwService.Reader GetReaderById(int readerId) {
            return base.Channel.GetReaderById(readerId);
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Reader> GetReaderByIdAsync(int readerId) {
            return base.Channel.GetReaderByIdAsync(readerId);
        }
        
        public ReaderDataCollector.AtwService.Reader[] GetAllReaders() {
            return base.Channel.GetAllReaders();
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Reader[]> GetAllReadersAsync() {
            return base.Channel.GetAllReadersAsync();
        }
        
        public ReaderDataCollector.AtwService.Read[] GetAllReadsByReadingId(System.Guid readingId) {
            return base.Channel.GetAllReadsByReadingId(readingId);
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.Read[]> GetAllReadsByReadingIdAsync(System.Guid readingId) {
            return base.Channel.GetAllReadsByReadingIdAsync(readingId);
        }
    }
}
