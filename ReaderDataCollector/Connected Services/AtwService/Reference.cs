//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReaderDataCollector.AtwService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReadType", Namespace="http://schemas.datacontract.org/2004/07/ATWService.Model")]
    [System.SerializableAttribute()]
    public partial class ReadType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EpcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeakRssiInDbmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReadingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniqueReadIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Epc {
            get {
                return this.EpcField;
            }
            set {
                if ((object.ReferenceEquals(this.EpcField, value) != true)) {
                    this.EpcField = value;
                    this.RaisePropertyChanged("Epc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeakRssiInDbm {
            get {
                return this.PeakRssiInDbmField;
            }
            set {
                if ((object.ReferenceEquals(this.PeakRssiInDbmField, value) != true)) {
                    this.PeakRssiInDbmField = value;
                    this.RaisePropertyChanged("PeakRssiInDbm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReadingID {
            get {
                return this.ReadingIDField;
            }
            set {
                if ((this.ReadingIDField.Equals(value) != true)) {
                    this.ReadingIDField = value;
                    this.RaisePropertyChanged("ReadingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqueReadID {
            get {
                return this.UniqueReadIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqueReadIDField, value) != true)) {
                    this.UniqueReadIDField = value;
                    this.RaisePropertyChanged("UniqueReadID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReadingType", Namespace="http://schemas.datacontract.org/2004/07/ATWService.Model")]
    [System.SerializableAttribute()]
    public partial class ReadingType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AntennaNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReaderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReaderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimingPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalReadsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AntennaNumber {
            get {
                return this.AntennaNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AntennaNumberField, value) != true)) {
                    this.AntennaNumberField = value;
                    this.RaisePropertyChanged("AntennaNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndedDateTime {
            get {
                return this.EndedDateTimeField;
            }
            set {
                if ((this.EndedDateTimeField.Equals(value) != true)) {
                    this.EndedDateTimeField = value;
                    this.RaisePropertyChanged("EndedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReaderID {
            get {
                return this.ReaderIDField;
            }
            set {
                if ((this.ReaderIDField.Equals(value) != true)) {
                    this.ReaderIDField = value;
                    this.RaisePropertyChanged("ReaderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReaderNumber {
            get {
                return this.ReaderNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReaderNumberField, value) != true)) {
                    this.ReaderNumberField = value;
                    this.RaisePropertyChanged("ReaderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartedDateTime {
            get {
                return this.StartedDateTimeField;
            }
            set {
                if ((this.StartedDateTimeField.Equals(value) != true)) {
                    this.StartedDateTimeField = value;
                    this.RaisePropertyChanged("StartedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimingPoint {
            get {
                return this.TimingPointField;
            }
            set {
                if ((object.ReferenceEquals(this.TimingPointField, value) != true)) {
                    this.TimingPointField = value;
                    this.RaisePropertyChanged("TimingPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalReads {
            get {
                return this.TotalReadsField;
            }
            set {
                if ((this.TotalReadsField.Equals(value) != true)) {
                    this.TotalReadsField = value;
                    this.RaisePropertyChanged("TotalReads");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReaderType", Namespace="http://schemas.datacontract.org/2004/07/ATWService.Model")]
    [System.SerializableAttribute()]
    public partial class ReaderType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Host {
            get {
                return this.HostField;
            }
            set {
                if ((object.ReferenceEquals(this.HostField, value) != true)) {
                    this.HostField = value;
                    this.RaisePropertyChanged("Host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Port {
            get {
                return this.PortField;
            }
            set {
                if ((object.ReferenceEquals(this.PortField, value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RaceType", Namespace="http://schemas.datacontract.org/2004/07/ATWService.Model")]
    [System.SerializableAttribute()]
    public partial class RaceType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReaderDataCollector.AtwService.ReaderType ReaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReaderDataCollector.AtwService.ReadingType ReadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReaderDataCollector.AtwService.ReadType[] ReadsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReaderDataCollector.AtwService.ReaderType Reader {
            get {
                return this.ReaderField;
            }
            set {
                if ((object.ReferenceEquals(this.ReaderField, value) != true)) {
                    this.ReaderField = value;
                    this.RaisePropertyChanged("Reader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReaderDataCollector.AtwService.ReadingType Reading {
            get {
                return this.ReadingField;
            }
            set {
                if ((object.ReferenceEquals(this.ReadingField, value) != true)) {
                    this.ReadingField = value;
                    this.RaisePropertyChanged("Reading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReaderDataCollector.AtwService.ReadType[] Reads {
            get {
                return this.ReadsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReadsField, value) != true)) {
                    this.ReadsField = value;
                    this.RaisePropertyChanged("Reads");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AtwService.IReadingService")]
    public interface IReadingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetReadUsingDataContract", ReplyAction="http://tempuri.org/IReadingService/GetReadUsingDataContractResponse")]
        ReaderDataCollector.AtwService.ReadType GetReadUsingDataContract(ReaderDataCollector.AtwService.ReadType read);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetReadUsingDataContract", ReplyAction="http://tempuri.org/IReadingService/GetReadUsingDataContractResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.ReadType> GetReadUsingDataContractAsync(ReaderDataCollector.AtwService.ReadType read);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetReadingUsingDataContract", ReplyAction="http://tempuri.org/IReadingService/GetReadingUsingDataContractResponse")]
        ReaderDataCollector.AtwService.ReadingType GetReadingUsingDataContract(ReaderDataCollector.AtwService.ReadingType read);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetReadingUsingDataContract", ReplyAction="http://tempuri.org/IReadingService/GetReadingUsingDataContractResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.ReadingType> GetReadingUsingDataContractAsync(ReaderDataCollector.AtwService.ReadingType read);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetReaderUsingDataContract", ReplyAction="http://tempuri.org/IReadingService/GetReaderUsingDataContractResponse")]
        ReaderDataCollector.AtwService.ReaderType GetReaderUsingDataContract(ReaderDataCollector.AtwService.ReaderType read);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetReaderUsingDataContract", ReplyAction="http://tempuri.org/IReadingService/GetReaderUsingDataContractResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.ReaderType> GetReaderUsingDataContractAsync(ReaderDataCollector.AtwService.ReaderType read);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetRaceUsingDataContract", ReplyAction="http://tempuri.org/IReadingService/GetRaceUsingDataContractResponse")]
        ReaderDataCollector.AtwService.RaceType GetRaceUsingDataContract(int readingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetRaceUsingDataContract", ReplyAction="http://tempuri.org/IReadingService/GetRaceUsingDataContractResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.RaceType> GetRaceUsingDataContractAsync(int readingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetActiveReadings", ReplyAction="http://tempuri.org/IReadingService/GetActiveReadingsResponse")]
        ReaderDataCollector.AtwService.ReadingType[] GetActiveReadings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetActiveReadings", ReplyAction="http://tempuri.org/IReadingService/GetActiveReadingsResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.ReadingType[]> GetActiveReadingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetActiveRaces", ReplyAction="http://tempuri.org/IReadingService/GetActiveRacesResponse")]
        ReaderDataCollector.AtwService.RaceType[] GetActiveRaces();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReadingService/GetActiveRaces", ReplyAction="http://tempuri.org/IReadingService/GetActiveRacesResponse")]
        System.Threading.Tasks.Task<ReaderDataCollector.AtwService.RaceType[]> GetActiveRacesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReadingServiceChannel : ReaderDataCollector.AtwService.IReadingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReadingServiceClient : System.ServiceModel.ClientBase<ReaderDataCollector.AtwService.IReadingService>, ReaderDataCollector.AtwService.IReadingService {
        
        public ReadingServiceClient() {
        }
        
        public ReadingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReadingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReadingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReadingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReaderDataCollector.AtwService.ReadType GetReadUsingDataContract(ReaderDataCollector.AtwService.ReadType read) {
            return base.Channel.GetReadUsingDataContract(read);
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.ReadType> GetReadUsingDataContractAsync(ReaderDataCollector.AtwService.ReadType read) {
            return base.Channel.GetReadUsingDataContractAsync(read);
        }
        
        public ReaderDataCollector.AtwService.ReadingType GetReadingUsingDataContract(ReaderDataCollector.AtwService.ReadingType read) {
            return base.Channel.GetReadingUsingDataContract(read);
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.ReadingType> GetReadingUsingDataContractAsync(ReaderDataCollector.AtwService.ReadingType read) {
            return base.Channel.GetReadingUsingDataContractAsync(read);
        }
        
        public ReaderDataCollector.AtwService.ReaderType GetReaderUsingDataContract(ReaderDataCollector.AtwService.ReaderType read) {
            return base.Channel.GetReaderUsingDataContract(read);
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.ReaderType> GetReaderUsingDataContractAsync(ReaderDataCollector.AtwService.ReaderType read) {
            return base.Channel.GetReaderUsingDataContractAsync(read);
        }
        
        public ReaderDataCollector.AtwService.RaceType GetRaceUsingDataContract(int readingID) {
            return base.Channel.GetRaceUsingDataContract(readingID);
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.RaceType> GetRaceUsingDataContractAsync(int readingID) {
            return base.Channel.GetRaceUsingDataContractAsync(readingID);
        }
        
        public ReaderDataCollector.AtwService.ReadingType[] GetActiveReadings() {
            return base.Channel.GetActiveReadings();
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.ReadingType[]> GetActiveReadingsAsync() {
            return base.Channel.GetActiveReadingsAsync();
        }
        
        public ReaderDataCollector.AtwService.RaceType[] GetActiveRaces() {
            return base.Channel.GetActiveRaces();
        }
        
        public System.Threading.Tasks.Task<ReaderDataCollector.AtwService.RaceType[]> GetActiveRacesAsync() {
            return base.Channel.GetActiveRacesAsync();
        }
    }
}
